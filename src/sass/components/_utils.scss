@use "./variables" as *;

@function hslac($color, $alpha) {
  @if (type-of($color) == "color") {
    @return hsla(hue($color), saturation($color), lightness($color), $alpha);
  } @else {
    @error "You didn't pass a color object";
  }
}

.clr-primary {
  color: $clr-primary;
}
.clr-neutral-800 {
  color: $clr-neutral-800;
}
.clr-neutral-500 {
  color: $clr-neutral-500;
}
.clr-neutral-300 {
  color: $clr-neutral-300;
}
.clr-neutral-100 {
  color: $clr-neutral-100;
}
.fw-bold {
  font-weight: $fw-bold;
}
.fw-regular {
  font-weight: $fw-regular;
}
.fw-light {
  font-weight: $fw-light;
}
.fs-300 {
  font-size: $fs-300;
}
.fs-400 {
  font-size: $fs-400;
}
.fs-500 {
  font-size: $fs-500;
}
.fs-600 {
  font-size: $fs-600;
}
.fs-700 {
  font-size: $fs-700;
}
.fs-800 {
  font-size: $fs-800;
}
.input-control {
  padding: 1.25rem 1.5rem 1.25rem 1.3rem;
  border: 1px solid $clr-neutral-300;
  border-radius: 0.75rem;
  display: flex;
  gap: 1.5rem;
  align-items: center;
  letter-spacing: -0.075rem;
  line-height: normal;
  font-size: 1.5rem;
  max-height: 4.3125rem;
  &:focus-within {
    border-color: $clr-primary;
  }

  input {
    border: none;
    outline: none;
    width: 100%;
    flex-grow: 1;
  }
}

.radio {
  appearance: none;
  margin: 0;
  width: 1.9375rem;
  height: 1.9375rem;
  border: 1px solid $clr-neutral-300;
  border-radius: 50%;
  display: grid;
  place-content: center;
  transition: background-color 125ms ease, outline-color 125ms ease;
  outline-offset: 1px;

  &:focus-visible {
    outline: 2px dashed $clr-primary;
  }

  &::before {
    content: "";
    width: 0.9375rem;
    height: 0.9375rem;
    border-radius: 50%;
    box-shadow: inset 1rem 1rem $clr-primary;
    transform: scale(0);
    transition: transform 125ms ease;
  }
  &:checked {
    background-color: hslac($clr-primary, 0.15);
    border-color: transparent;
    &::before {
      transform: scale(1);
    }
  }
}

.attribution {
  color: $clr-neutral-800;
  width: 100%;
  text-align: center;
  margin-top: 1.5rem;
  font-weight: 700;
  margin-bottom: 1rem;

  a {
    color: $clr-primary;
  }
  @media only screen and (min-width: 60em) {
    a {
      position: relative;
      transition: color 0.2s ease;
      &::after {
        position: absolute;
        content: "";
        width: 100%;
        height: 1.5px;
        bottom: -2px;
        left: 0;
        background-color: $clr-primary;
        transform-origin: right;
        transform: scaleX(0);
        transition: transform 0.2s ease, background-color 0.2s ease;
      }
      &:hover {
        &::after {
          background-color: $clr-primary;
          transform-origin: left;
          transform: scaleX(1);
        }
      }
    }
  }
}
